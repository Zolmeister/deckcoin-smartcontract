// MintableToken
  // Ownable
    // address public owner;
    // event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    // function Ownable()
    // modifier onlyOwner()
    // function transferOwnership(address newOwner) onlyOwner public
  // SafeMath
    // function mul(uint256 a, uint256 b) internal constant returns (uint256)
    // function div(uint256 a, uint256 b) internal constant returns (uint256)
    // function sub(uint256 a, uint256 b) internal constant returns (uint256)
    // function add(uint256 a, uint256 b) internal constant returns (uint256)
  // ERC20Basic
    // uint256 public totalSupply;
    // event Transfer(address indexed from, address indexed to, uint256 value);
  // ERC20
    // event Approval(address indexed owner, address indexed spender, uint256 value);
  // BasicToken
    // mapping(address => uint256) balances;
    // function transfer(address _to, uint256 _value) public returns (bool)
    // function balanceOf(address _owner) public constant returns (uint256 balance)
  // StandardToken
    // mapping (address => mapping (address => uint256)) internal allowed;
    // function transferFrom(address _from, address _to, uint256 _value) public returns (bool)
    // function approve(address _spender, uint256 _value) public returns (bool)
    // function allowance(address _owner, address _spender) public constant returns (uint256 remaining)
    // function increaseApproval (address _spender, uint _addedValue) public returns (bool success)
    // function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success)
  // MintableToken
    // event Mint(address indexed to, uint256 amount);
    // event MintFinished();
    // bool public mintingFinished = false;
    // modifier canMint
    // function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool)
    // function finishMinting() onlyOwner public returns (bool)


// CappedCrowdsale, RefundableCrowdsale
  // Ownable
    // address public owner;
    // event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    // function Ownable()
    // modifier onlyOwner()
    // function transferOwnership(address newOwner) onlyOwner public
  // Crowdsale
    // MintableToken public token;
    // uint256 public startTime;
    // uint256 public endTime;
    // address public wallet;
    // uint256 public rate;
    // uint256 public weiRaised;
    // event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);
    // function Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet)
    // function createTokenContract() internal returns (MintableToken)
    // function () payable
    // function buyTokens(address beneficiary) public payable
    // function forwardFunds() internal
    // function validPurchase() internal constant returns (bool)
    // function hasEnded() public constant returns (bool)
  // CappedCrowdsale
    // uint256 public cap;
    // function CappedCrowdsale(uint256 _cap)
    // function validPurchase() internal constant returns (bool)
    // function hasEnded() public constant returns (bool)
  // FinalizableCrowdsale
    // bool public isFinalized = false;
    // event Finalized();
    // function finalize() onlyOwner public
    // // should call super.finalization()
    // function finalization() internal
  // RefundableCrowdsale
    // uint256 public goal;
    // RefundVault public vault;
    // function RefundableCrowdsale(uint256 _goal)
    // function forwardFunds() internal
    // function claimRefund() public
    // function finalization() internal
    // function goalReached() public constant returns (bool)
